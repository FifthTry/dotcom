-- ds.page: `/api/upload/`

This API uploads the files and also deletes the files so that the content on
`ft` becomes the same as the local.

**Method**: POST
**Params**: site (the site whose content are needed to be uploaded)

**Request**:

This accepts `form-data` with the key as the filename and the value as the
binary content.
There's special key `deleted` which takes the list of filename (string).
These files will be deleted from `ft`.

**Response:**

-- ds.code:
lang: rs

#[derive(serde::Serialize)]
struct SuccessResponse<T: serde::Serialize> {
    data: T,
    success: bool,
}

// Here, T is Vec<FileHash>

#[derive(serde::Serialize)]
struct FileHash {
    file_name: String,
    deleted: bool,
}


-- ds.h2: Example

Note: This example currently calls the local API `http://127.0.0.1:8001` as this
has not been deployed in `api.fifthtry.com` yet.

-- ds.h3: Request:

-- ds.code:
lang: sh

curl --location --request POST 'http://127.0.0.1:8001/api/upload/?site=t' \
--form 'folder/a.ftd=@"/Users/arpitajaiswal/Desktop/test-2/test3/a.ftd"' \
--form 'deleted="[\"folder/b.ftd\", \"c.ftd\"]"'


-- ds.h3: Response:

-- ds.code:
lang: sh

{
    "data": [
        {
            "file_name": "folder/a.ftd",
            "deleted": false
        },
        {
            "file_name": "folder/b.ftd",
            "deleted": true
        },
        {
            "file_name": "c.ftd",
            "deleted": true
        }
    ],
    "success": true
}

-- end: ds.page
